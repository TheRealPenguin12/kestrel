Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS term
Rule 2     expression -> expression MINUS term
Rule 3     expression -> term
Rule 4     term -> term TIMES factor
Rule 5     term -> term DIVIDE factor
Rule 6     term -> factor
Rule 7     term -> PRINT term
Rule 8     term -> QUOTE term QUOTE
Rule 9     factor -> NUMBER
Rule 10    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

DIVIDE               : 5
LPAREN               : 10
MINUS                : 2
NUMBER               : 9
PLUS                 : 1
PRINT                : 7
QUOTE                : 8 8
RPAREN               : 10
TIMES                : 4
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 10 0
factor               : 4 5 6
term                 : 1 2 3 4 5 7 8

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . QUOTE term QUOTE
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    QUOTE           shift and go to state 5
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 1

    (0) S' -> expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9


state 2

    (3) expression -> term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 3 (expression -> term .)
    MINUS           reduce using rule 3 (expression -> term .)
    $end            reduce using rule 3 (expression -> term .)
    RPAREN          reduce using rule 3 (expression -> term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 3

    (6) term -> factor .

    TIMES           reduce using rule 6 (term -> factor .)
    DIVIDE          reduce using rule 6 (term -> factor .)
    PLUS            reduce using rule 6 (term -> factor .)
    MINUS           reduce using rule 6 (term -> factor .)
    $end            reduce using rule 6 (term -> factor .)
    QUOTE           reduce using rule 6 (term -> factor .)
    RPAREN          reduce using rule 6 (term -> factor .)


state 4

    (7) term -> PRINT . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . QUOTE term QUOTE
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    QUOTE           shift and go to state 5
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7

    term                           shift and go to state 12
    factor                         shift and go to state 3

state 5

    (8) term -> QUOTE . term QUOTE
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . QUOTE term QUOTE
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    QUOTE           shift and go to state 5
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7

    term                           shift and go to state 13
    factor                         shift and go to state 3

state 6

    (9) factor -> NUMBER .

    TIMES           reduce using rule 9 (factor -> NUMBER .)
    DIVIDE          reduce using rule 9 (factor -> NUMBER .)
    PLUS            reduce using rule 9 (factor -> NUMBER .)
    MINUS           reduce using rule 9 (factor -> NUMBER .)
    $end            reduce using rule 9 (factor -> NUMBER .)
    QUOTE           reduce using rule 9 (factor -> NUMBER .)
    RPAREN          reduce using rule 9 (factor -> NUMBER .)


state 7

    (10) factor -> LPAREN . expression RPAREN
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . QUOTE term QUOTE
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    QUOTE           shift and go to state 5
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7

    expression                     shift and go to state 14
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 8

    (1) expression -> expression PLUS . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . QUOTE term QUOTE
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    QUOTE           shift and go to state 5
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7

    term                           shift and go to state 15
    factor                         shift and go to state 3

state 9

    (2) expression -> expression MINUS . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . QUOTE term QUOTE
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    QUOTE           shift and go to state 5
    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7

    term                           shift and go to state 16
    factor                         shift and go to state 3

state 10

    (4) term -> term TIMES . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7

    factor                         shift and go to state 17

state 11

    (5) term -> term DIVIDE . factor
    (9) factor -> . NUMBER
    (10) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 6
    LPAREN          shift and go to state 7

    factor                         shift and go to state 18

state 12

    (7) term -> PRINT term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 7 (term -> PRINT term .)
    MINUS           reduce using rule 7 (term -> PRINT term .)
    $end            reduce using rule 7 (term -> PRINT term .)
    QUOTE           reduce using rule 7 (term -> PRINT term .)
    RPAREN          reduce using rule 7 (term -> PRINT term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11

  ! TIMES           [ reduce using rule 7 (term -> PRINT term .) ]
  ! DIVIDE          [ reduce using rule 7 (term -> PRINT term .) ]


state 13

    (8) term -> QUOTE term . QUOTE
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

    QUOTE           shift and go to state 19
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 14

    (10) factor -> LPAREN expression . RPAREN
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    RPAREN          shift and go to state 20
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9


state 15

    (1) expression -> expression PLUS term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 1 (expression -> expression PLUS term .)
    MINUS           reduce using rule 1 (expression -> expression PLUS term .)
    $end            reduce using rule 1 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 1 (expression -> expression PLUS term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 16

    (2) expression -> expression MINUS term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 2 (expression -> expression MINUS term .)
    MINUS           reduce using rule 2 (expression -> expression MINUS term .)
    $end            reduce using rule 2 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 2 (expression -> expression MINUS term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 17

    (4) term -> term TIMES factor .

    TIMES           reduce using rule 4 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 4 (term -> term TIMES factor .)
    PLUS            reduce using rule 4 (term -> term TIMES factor .)
    MINUS           reduce using rule 4 (term -> term TIMES factor .)
    $end            reduce using rule 4 (term -> term TIMES factor .)
    QUOTE           reduce using rule 4 (term -> term TIMES factor .)
    RPAREN          reduce using rule 4 (term -> term TIMES factor .)


state 18

    (5) term -> term DIVIDE factor .

    TIMES           reduce using rule 5 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 5 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 5 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 5 (term -> term DIVIDE factor .)
    $end            reduce using rule 5 (term -> term DIVIDE factor .)
    QUOTE           reduce using rule 5 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 5 (term -> term DIVIDE factor .)


state 19

    (8) term -> QUOTE term QUOTE .

    TIMES           reduce using rule 8 (term -> QUOTE term QUOTE .)
    DIVIDE          reduce using rule 8 (term -> QUOTE term QUOTE .)
    PLUS            reduce using rule 8 (term -> QUOTE term QUOTE .)
    MINUS           reduce using rule 8 (term -> QUOTE term QUOTE .)
    $end            reduce using rule 8 (term -> QUOTE term QUOTE .)
    QUOTE           reduce using rule 8 (term -> QUOTE term QUOTE .)
    RPAREN          reduce using rule 8 (term -> QUOTE term QUOTE .)


state 20

    (10) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    QUOTE           reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 10 (factor -> LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 12 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 12 resolved as shift
