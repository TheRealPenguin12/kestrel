Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS term
Rule 2     expression -> expression MINUS term
Rule 3     expression -> term
Rule 4     term -> term TIMES factor
Rule 5     term -> term DIVIDE factor
Rule 6     term -> factor
Rule 7     term -> PRINT term
Rule 8     term -> INPUT term
Rule 9     term -> LPAREN term RPAREN
Rule 10    factor -> NUMBER
Rule 11    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

DIVIDE               : 5
INPUT                : 8
LPAREN               : 9 11
MINUS                : 2
NUMBER               : 10
PLUS                 : 1
PRINT                : 7
RPAREN               : 9 11
TIMES                : 4
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 11 0
factor               : 4 5 6
term                 : 1 2 3 4 5 7 8 9

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . INPUT term
    (9) term -> . LPAREN term RPAREN
    (10) factor -> . NUMBER
    (11) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    INPUT           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 1

    (0) S' -> expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9


state 2

    (3) expression -> term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 3 (expression -> term .)
    MINUS           reduce using rule 3 (expression -> term .)
    $end            reduce using rule 3 (expression -> term .)
    RPAREN          reduce using rule 3 (expression -> term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 3

    (6) term -> factor .

    TIMES           reduce using rule 6 (term -> factor .)
    DIVIDE          reduce using rule 6 (term -> factor .)
    PLUS            reduce using rule 6 (term -> factor .)
    MINUS           reduce using rule 6 (term -> factor .)
    $end            reduce using rule 6 (term -> factor .)
    RPAREN          reduce using rule 6 (term -> factor .)


state 4

    (7) term -> PRINT . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . INPUT term
    (9) term -> . LPAREN term RPAREN
    (10) factor -> . NUMBER
    (11) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    INPUT           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7

    term                           shift and go to state 12
    factor                         shift and go to state 3

state 5

    (8) term -> INPUT . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . INPUT term
    (9) term -> . LPAREN term RPAREN
    (10) factor -> . NUMBER
    (11) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    INPUT           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7

    term                           shift and go to state 13
    factor                         shift and go to state 3

state 6

    (9) term -> LPAREN . term RPAREN
    (11) factor -> LPAREN . expression RPAREN
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . INPUT term
    (9) term -> . LPAREN term RPAREN
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (10) factor -> . NUMBER
    (11) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    INPUT           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7

    term                           shift and go to state 14
    expression                     shift and go to state 15
    factor                         shift and go to state 3

state 7

    (10) factor -> NUMBER .

    TIMES           reduce using rule 10 (factor -> NUMBER .)
    DIVIDE          reduce using rule 10 (factor -> NUMBER .)
    PLUS            reduce using rule 10 (factor -> NUMBER .)
    MINUS           reduce using rule 10 (factor -> NUMBER .)
    $end            reduce using rule 10 (factor -> NUMBER .)
    RPAREN          reduce using rule 10 (factor -> NUMBER .)


state 8

    (1) expression -> expression PLUS . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . INPUT term
    (9) term -> . LPAREN term RPAREN
    (10) factor -> . NUMBER
    (11) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    INPUT           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7

    term                           shift and go to state 16
    factor                         shift and go to state 3

state 9

    (2) expression -> expression MINUS . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . INPUT term
    (9) term -> . LPAREN term RPAREN
    (10) factor -> . NUMBER
    (11) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    INPUT           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7

    term                           shift and go to state 17
    factor                         shift and go to state 3

state 10

    (4) term -> term TIMES . factor
    (10) factor -> . NUMBER
    (11) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 19

    factor                         shift and go to state 18

state 11

    (5) term -> term DIVIDE . factor
    (10) factor -> . NUMBER
    (11) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 7
    LPAREN          shift and go to state 19

    factor                         shift and go to state 20

state 12

    (7) term -> PRINT term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 7 (term -> PRINT term .)
    MINUS           reduce using rule 7 (term -> PRINT term .)
    $end            reduce using rule 7 (term -> PRINT term .)
    RPAREN          reduce using rule 7 (term -> PRINT term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11

  ! TIMES           [ reduce using rule 7 (term -> PRINT term .) ]
  ! DIVIDE          [ reduce using rule 7 (term -> PRINT term .) ]


state 13

    (8) term -> INPUT term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 8 (term -> INPUT term .)
    MINUS           reduce using rule 8 (term -> INPUT term .)
    $end            reduce using rule 8 (term -> INPUT term .)
    RPAREN          reduce using rule 8 (term -> INPUT term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11

  ! TIMES           [ reduce using rule 8 (term -> INPUT term .) ]
  ! DIVIDE          [ reduce using rule 8 (term -> INPUT term .) ]


state 14

    (9) term -> LPAREN term . RPAREN
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor
    (3) expression -> term .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 21
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    PLUS            reduce using rule 3 (expression -> term .)
    MINUS           reduce using rule 3 (expression -> term .)

  ! RPAREN          [ reduce using rule 3 (expression -> term .) ]


state 15

    (11) factor -> LPAREN expression . RPAREN
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    RPAREN          shift and go to state 22
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9


state 16

    (1) expression -> expression PLUS term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 1 (expression -> expression PLUS term .)
    MINUS           reduce using rule 1 (expression -> expression PLUS term .)
    $end            reduce using rule 1 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 1 (expression -> expression PLUS term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 17

    (2) expression -> expression MINUS term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 2 (expression -> expression MINUS term .)
    MINUS           reduce using rule 2 (expression -> expression MINUS term .)
    $end            reduce using rule 2 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 2 (expression -> expression MINUS term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 18

    (4) term -> term TIMES factor .

    TIMES           reduce using rule 4 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 4 (term -> term TIMES factor .)
    PLUS            reduce using rule 4 (term -> term TIMES factor .)
    MINUS           reduce using rule 4 (term -> term TIMES factor .)
    $end            reduce using rule 4 (term -> term TIMES factor .)
    RPAREN          reduce using rule 4 (term -> term TIMES factor .)


state 19

    (11) factor -> LPAREN . expression RPAREN
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) term -> . PRINT term
    (8) term -> . INPUT term
    (9) term -> . LPAREN term RPAREN
    (10) factor -> . NUMBER
    (11) factor -> . LPAREN expression RPAREN

    PRINT           shift and go to state 4
    INPUT           shift and go to state 5
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 7

    expression                     shift and go to state 15
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 20

    (5) term -> term DIVIDE factor .

    TIMES           reduce using rule 5 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 5 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 5 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 5 (term -> term DIVIDE factor .)
    $end            reduce using rule 5 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 5 (term -> term DIVIDE factor .)


state 21

    (9) term -> LPAREN term RPAREN .

    TIMES           reduce using rule 9 (term -> LPAREN term RPAREN .)
    DIVIDE          reduce using rule 9 (term -> LPAREN term RPAREN .)
    PLUS            reduce using rule 9 (term -> LPAREN term RPAREN .)
    MINUS           reduce using rule 9 (term -> LPAREN term RPAREN .)
    $end            reduce using rule 9 (term -> LPAREN term RPAREN .)
    RPAREN          reduce using rule 9 (term -> LPAREN term RPAREN .)


state 22

    (11) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 11 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 11 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 11 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 11 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 11 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 11 (factor -> LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 12 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 12 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 13 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 13 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 14 resolved as shift
